@model SistemaBliss.EN.Usuario

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Edit", "Cliente", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="seccion-registro-header">
        <h2 class="titulo">Edita un cliente existente</h2>
        <p class="parrafo">Edita los datos necesarios del cliente para mantener actualizada su información</p>

        <div class="form-group d-flex gap-2">
            <button type="submit" class="btn-morado">Guardar</button>
            @Html.ActionLink("Cancelar", "Index", "Cliente", new { @class = "btn-second" })
        </div>
    </div>

    <div class="card" style="padding:25px; border-radius:10px; margin-top:16px;">
        <ul class="nav d-flex nav-pills mb-3" id="pills-tab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home" aria-selected="true">Datos Personales</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="pills-profile-tab" data-bs-toggle="pill" data-bs-target="#pills-profile" type="button" role="tab" aria-controls="pills-profile" aria-selected="false">Datos de usuario</button>
            </li>
        </ul>

        <div class="tab-content" id="pills-tabContent">
            <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab" tabindex="0">
                <div style="border:none;" class="form-inputs mt-4">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.IdUsuario)

                    <input type="hidden" name="IdRol" value="2" />

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdDepartamento, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.IdDepartamento, new SelectList(ViewBag.Departamentos, "Value", "Text", null), new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.IdDepartamento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdMunicipio, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.IdMunicipio, new SelectList(ViewBag.Municipios, "Value", "Text", null), new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.IdMunicipio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Dui, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Dui, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Dui, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab" tabindex="0">
                        <div style="border:none;" class="form-inputs mt-4">

                            <div class="form-group">
                                @Html.LabelFor(model => model.IdEstado, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.IdEstado, new SelectList(ViewBag.Estados, "Value", "Text", null), new { @class = "form-select" })
                                    @Html.ValidationMessageFor(model => model.IdEstado, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Contrasena, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Contrasena, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.UrlImagen, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @if (!string.IsNullOrEmpty(Model.UrlImagen))
                                    {
                                        <img class="d-none" src="@Url.Content(Model.UrlImagen)" alt="Imagen del usuario" style="max-width: 200px; max-height: 200px;" />
                                    }
                                    <input type="file" id="formFile" name="UploadImage" class="form-control" />
                                    @Html.ValidationMessageFor(model => model.UrlImagen, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>

                </div>

 </div>
   
}



